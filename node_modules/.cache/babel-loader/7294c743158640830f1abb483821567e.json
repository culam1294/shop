{"ast":null,"code":"const initialState = {\n  list: [],\n  amount: 1\n};\n\nconst List = (state = initialState.list, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\":\n      {\n        return [...state, action.payload];\n      }\n\n    case \"INCREMENT_AMOUNT\":\n      {\n        const id = action.payload;\n        state.forEach(e => {\n          if (e.id === id) {\n            e.amount++;\n          }\n        });\n        return [...state];\n      }\n\n    case \"CREMENT_AMOUNT\":\n      {\n        const id = action.payload;\n        state.forEach(e => {\n          if (e.id === id) {\n            e.amount++;\n          }\n        });\n        return [...state];\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/reducers/List.js"],"names":["initialState","list","amount","List","state","action","type","payload","id","forEach","e"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGJ,YAAY,CAACC,IAAtB,EAA4BI,MAA5B,KAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,eAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AACD;;AACD,SAAK,kBAAL;AAAyB;AACvB,cAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB;AAEAH,QAAAA,KAAK,CAACK,OAAN,CAAeC,CAAD,IAAO;AACnB,cAAIA,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACfE,YAAAA,CAAC,CAACR,MAAF;AACD;AACF,SAJD;AAKA,eAAO,CAAC,GAAGE,KAAJ,CAAP;AACD;;AACD,SAAK,gBAAL;AAAuB;AACrB,cAAMI,EAAE,GAAGH,MAAM,CAACE,OAAlB;AAEAH,QAAAA,KAAK,CAACK,OAAN,CAAeC,CAAD,IAAO;AACnB,cAAIA,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACfE,YAAAA,CAAC,CAACR,MAAF;AACD;AACF,SAJD;AAKA,eAAO,CAAC,GAAGE,KAAJ,CAAP;AACD;;AACD;AACE,aAAOA,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,IAAf","sourcesContent":["const initialState = {\n  list: [],\n  amount: 1,\n};\nconst List = (state = initialState.list, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\": {\n      return [...state, action.payload];\n    }\n    case \"INCREMENT_AMOUNT\": {\n      const id = action.payload;\n\n      state.forEach((e) => {\n        if (e.id === id) {\n          e.amount++;\n        }\n      });\n      return [...state];\n    }\n    case \"CREMENT_AMOUNT\": {\n      const id = action.payload;\n\n      state.forEach((e) => {\n        if (e.id === id) {\n          e.amount++;\n        }\n      });\n      return [...state];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}