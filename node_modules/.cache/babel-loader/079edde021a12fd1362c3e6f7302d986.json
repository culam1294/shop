{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/App.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment, decrement } from \"./action/Counter\";\nimport { isLoad } from \"./action/IsLoad\";\nimport ManagerProducts from \"./container/ManagerProducts/index\";\nimport Test from './Test';\n\nfunction App() {\n  function* generator(i) {\n    yield i;\n    yield i + 10;\n  }\n\n  const gen = generator(10);\n  console.log(gen.next().value); // expected output: 10\n\n  console.log(gen.next().value); // expected output: 20\n\n  const counter = useSelector(state => state.count);\n  const load = useSelector(state => state.load);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(load), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(isLoad()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"load\"), /*#__PURE__*/React.createElement(Test, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increment()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"increment\"), \"My counter is \", counter, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decrement()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \" decrement \"), /*#__PURE__*/React.createElement(ManagerProducts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/App.js"],"names":["React","useSelector","useDispatch","increment","decrement","isLoad","ManagerProducts","Test","App","generator","i","gen","console","log","next","value","counter","state","count","load","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,kBAArC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,GAAT,GAAe;AAEb,YAAUC,SAAV,CAAoBC,CAApB,EAAuB;AACrB,UAAMA,CAAN;AACA,UAAMA,CAAC,GAAG,EAAV;AACD;;AAED,QAAMC,GAAG,GAAGF,SAAS,CAAC,EAAD,CAArB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,GAAWC,KAAvB,EATa,CAUb;;AAEAH,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,GAAWC,KAAvB,EAZa,CAab;;AAGA,QAAMC,OAAO,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA3B;AACA,QAAMC,IAAI,GAAGlB,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAxB;AAEA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,sBACE,0CAMEU,OAAO,CAACC,GAAR,CAAYM,IAAZ,CANF,eAOE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACf,MAAM,EAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAQ,IAAA,OAAO,EAAE,MAAMe,QAAQ,CAACjB,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,oBAWiBa,OAXjB,eAYE;AAAQ,IAAA,OAAO,EAAE,MAAMI,QAAQ,CAAChB,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,eAaE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;;AAED,eAAeI,GAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment, decrement } from \"./action/Counter\";\nimport { isLoad } from \"./action/IsLoad\";\nimport ManagerProducts from \"./container/ManagerProducts/index\";\nimport Test from './Test';\n\nfunction App() {\n\n  function* generator(i) {\n    yield i;\n    yield i + 10;\n  }\n  \n  const gen = generator(10);\n  \n  console.log(gen.next().value);\n  // expected output: 10\n  \n  console.log(gen.next().value);\n  // expected output: 20\n  \n\n  const counter = useSelector((state) => state.count);\n  const load = useSelector((state) => state.load);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {/* {load ? (\n        <button onClick={() => dispatch(isLoad())}>load</button>\n      ) : (\n        <button onClick={() => dispatch(isLoad())}>logout</button>\n      )} */}\n     {console.log(load)}\n      <button onClick={() => dispatch(isLoad())}>load</button>\n      <Test/>\n      <br />\n      <button onClick={() => dispatch(increment())}>increment</button>\n      My counter is {counter}\n      <button onClick={() => dispatch(decrement())}> decrement </button>\n      <ManagerProducts />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}