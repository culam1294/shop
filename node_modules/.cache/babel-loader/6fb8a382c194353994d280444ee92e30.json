{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/shop/src/components/menuSecond/ModalFormLogin.jsx\";\nimport React, { useState } from \"react\";\nimport { Modal, Button, Form, Input, Checkbox, message } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { isLogin } from \"../../action/IsLogin\";\nexport default function ModalForm() {\n  const [visible, setVisible] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n  const dispatch = useDispatch();\n\n  const onFinish = async value => {\n    setVisible(false);\n    setIsLoad(false);\n    message.success(\"Login success!\");\n    dispatch(isLogin());\n  };\n\n  const onFinishFailed = err => {\n    console.log(\"Login failed!\", err);\n    setIsLoad(!isLoad);\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n    setIsLoad(false);\n  };\n\n  const [form] = Form.useForm();\n\n  const onReset = () => {\n    form.resetFields();\n    setIsLoad(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: '0px 15px'\n    },\n    type: \"primary\",\n    onClick: () => setVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Modal, {\n    closable: false,\n    title: \"Login to buy more\",\n    visible: visible,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    wrapperCol: {\n      span: 20\n    },\n    labelCol: {\n      span: 30\n    },\n    layout: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true\n    }],\n    name: \"account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true\n    }],\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Remember me\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setIsLoad(!isLoad),\n    loading: isLoad,\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 5\n    },\n    onClick: () => onReset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/shop/src/components/menuSecond/ModalFormLogin.jsx"],"names":["React","useState","Modal","Button","Form","Input","Checkbox","message","useDispatch","isLogin","ModalForm","visible","setVisible","isLoad","setIsLoad","dispatch","onFinish","value","success","onFinishFailed","err","console","log","onCancel","form","useForm","onReset","resetFields","margin","span","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, Form, Input, Checkbox, message } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { isLogin } from \"../../action/IsLogin\";\n\nexport default function ModalForm() {\n  const [visible, setVisible] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n  const dispatch = useDispatch();\n\n  const onFinish = async (value) => {\n    setVisible(false);\n    setIsLoad(false);\n    message.success(\"Login success!\");\n    dispatch(isLogin());\n  };\n  const onFinishFailed = (err) => {\n    console.log(\"Login failed!\", err);\n    setIsLoad(!isLoad);\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n    setIsLoad(false);\n  };\n  const [form] = Form.useForm();\n  const onReset = () => {\n    form.resetFields();\n    setIsLoad(false);\n  };\n\n  return (\n    <>\n      <Button\n        style={{ margin: '0px 15px' }}\n        type=\"primary\"\n        onClick={() => setVisible(true)}\n      >\n        Login\n      </Button>\n      <Modal\n        closable={false}\n        title=\"Login to buy more\"\n        visible={visible}\n        footer={null}\n      >\n        <Form\n          form={form}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          wrapperCol={{ span: 20 }}\n          labelCol={{ span: 30 }}\n\n          layout=\"horizontal\"\n        >\n          <Form.Item rules={[{ required: true }]} name=\"account\">\n            <Input placeholder=\"Account\" />\n          </Form.Item>\n          <Form.Item rules={[{ required: true }]} name=\"password\">\n            <Input.Password placeholder=\"Password\" />\n          </Form.Item>\n          <Form.Item name=\"remember\" valuePropName=\"checked\">\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              onClick={() => setIsLoad(!isLoad)}\n              loading={isLoad}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              Login\n            </Button>\n            <Button style={{ margin: 5 }} onClick={() => onReset()}>\n              Reset\n            </Button>\n            <Button onClick={() => onCancel()}>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}