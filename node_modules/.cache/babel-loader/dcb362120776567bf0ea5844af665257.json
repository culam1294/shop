{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/container/home/Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addList } from \"../../action/List\";\nimport \"antd/dist/antd.css\";\nimport { List, Card, Alert } from \"antd\";\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\nimport CarouselHome from \"../../components/carousel/Carousel\";\nimport callApi from \"../../api/ApiCaller\";\nexport default function Home() {\n  const [data, setData] = useState();\n  const dispatch = useDispatch();\n  const listCart = useSelector(state => state.list);\n  useEffect(() => {\n    async function fetchData() {\n      await callApi(\"get\", \"products\", null).then(res => setData(res.data)).catch(err => console.log(err));\n    }\n\n    fetchData();\n  }, []);\n  const {\n    Meta\n  } = Card; //Show message\n\n  const showMessage = () => /*#__PURE__*/React.createElement(Alert, {\n    message: \"Informational Notes\",\n    type: \"info\",\n    showIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  }); //Send a product to CART\n\n\n  const sendProduct = id => {\n    listCart.forEach(e => {\n      if (e.id === id) {\n        id = null;\n        showMessage();\n        alert(`e`);\n      }\n    });\n    data.forEach(item => {\n      if (item.id === id) {\n        dispatch(addList(item));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CarouselHome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 16,\n      xs: 1,\n      sm: 2,\n      md: 3,\n      lg: 4,\n      xl: 5,\n      xxl: 6\n    },\n    pagination: \"true\",\n    dataSource: data,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      hoverable: \"true\",\n      style: {\n        width: 300\n      },\n      cover: /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Products list\",\n        src: item.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 22\n        }\n      }),\n      actions: [/*#__PURE__*/React.createElement(ShoppingCartOutlined, {\n        onClick: () => sendProduct(item.id),\n        key: \"setting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Meta, {\n      title: item.name,\n      description: item.price + \"$\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/container/home/Home.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addList","List","Card","Alert","ShoppingCartOutlined","CarouselHome","callApi","Home","data","setData","dispatch","listCart","state","list","fetchData","then","res","catch","err","console","log","Meta","showMessage","sendProduct","id","forEach","e","alert","item","gutter","xs","sm","md","lg","xl","xxl","width","image","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,IAAf,EAAoBC,KAApB,QAAiC,MAAjC;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AAEA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,SAAf,GAA2B;AACzB,YAAMR,OAAO,CAAC,KAAD,EAAQ,UAAR,EAAoB,IAApB,CAAP,CACHS,IADG,CACGC,GAAD,IAASP,OAAO,CAACO,GAAG,CAACR,IAAL,CADlB,EAEHS,KAFG,CAEIC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFZ,CAAN;AAGD;;AACDJ,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,QAAM;AAAEO,IAAAA;AAAF,MAAWnB,IAAjB,CAf6B,CAiB7B;;AAEA,QAAMoB,WAAW,GAAE,mBAAI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,qBAAf;AAAqC,IAAA,IAAI,EAAC,MAA1C;AAAiD,IAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAnB6B,CAsB7B;;;AACA,QAAMC,WAAW,GAAIC,EAAD,IAAQ;AAC1Bb,IAAAA,QAAQ,CAACc,OAAT,CAAiBC,CAAC,IAAI;AACpB,UAAIA,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACfA,QAAAA,EAAE,GAAC,IAAH;AACAF,QAAAA,WAAW;AACXK,QAAAA,KAAK,CAAE,GAAF,CAAL;AACD;AACF,KAND;AAOAnB,IAAAA,IAAI,CAACiB,OAAL,CAAcG,IAAD,IAAU;AACrB,UAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAhB,EAAoB;AAClBd,QAAAA,QAAQ,CAACV,OAAO,CAAC4B,IAAD,CAAR,CAAR;AACD;AACF,KAJD;AAKD,GAbD;;AAeA,sBACE,uDACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,EAAE,EAAE,CAFA;AAGJC,MAAAA,EAAE,EAAE,CAHA;AAIJC,MAAAA,EAAE,EAAE,CAJA;AAKJC,MAAAA,EAAE,EAAE,CALA;AAMJC,MAAAA,EAAE,EAAE,CANA;AAOJC,MAAAA,GAAG,EAAE;AAPD,KADR;AAUE,IAAA,UAAU,EAAC,MAVb;AAWE,IAAA,UAAU,EAAE3B,IAXd;AAYE,IAAA,UAAU,EAAGoB,IAAD,iBACV,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,KAAK,eAAE;AAAK,QAAA,GAAG,EAAC,eAAT;AAAyB,QAAA,GAAG,EAAER,IAAI,CAACS,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHT;AAIE,MAAA,OAAO,EAAE,cACP,oBAAC,oBAAD;AACE,QAAA,OAAO,EAAE,MAAMd,WAAW,CAACK,IAAI,CAACJ,EAAN,CAD5B;AAEE,QAAA,GAAG,EAAC,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,IAAI,CAACU,IAAlB;AAAwB,MAAA,WAAW,EAAEV,IAAI,CAACW,KAAL,GAAa,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAmCD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addList } from \"../../action/List\";\n\nimport \"antd/dist/antd.css\";\nimport { List, Card,Alert } from \"antd\";\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\nimport CarouselHome from \"../../components/carousel/Carousel\";\nimport callApi from \"../../api/ApiCaller\";\n\nexport default function Home() {\n  const [data, setData] = useState();\n\n  const dispatch = useDispatch();\n  const listCart = useSelector((state) => state.list);\n\n  useEffect(() => {\n    async function fetchData() {\n      await callApi(\"get\", \"products\", null)\n        .then((res) => setData(res.data))\n        .catch((err) => console.log(err));\n    }\n    fetchData();\n  }, []);\n\n  const { Meta } = Card;\n\n  //Show message\n\n  const showMessage =()=><Alert message=\"Informational Notes\" type=\"info\" showIcon />\n\n  \n  //Send a product to CART\n  const sendProduct = (id) => {\n    listCart.forEach(e => {\n      if (e.id === id) {\n        id=null\n        showMessage()\n        alert(`e`)\n      }\n    });\n    data.forEach((item) => {\n      if (item.id === id) {\n        dispatch(addList(item));\n      }\n    });\n  };\n\n  return (\n    <>\n      <CarouselHome />\n      <List\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 5,\n          xxl: 6,\n        }}\n        pagination=\"true\"\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item>\n            <Card\n              hoverable=\"true\"\n              style={{ width: 300 }}\n              cover={<img alt=\"Products list\" src={item.image} />}\n              actions={[\n                <ShoppingCartOutlined\n                  onClick={() => sendProduct(item.id)}\n                  key=\"setting\"\n                />,\n              ]}\n            >\n              <Meta title={item.name} description={item.price + \"$\"} />\n            </Card>\n          </List.Item>\n        )}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}