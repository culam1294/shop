{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/shop/src/components/cart/ButtonOrder.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { message, Button } from 'antd';\nimport { orderSuccess } from '../../action/List';\nimport { useHistory } from 'react-router-dom';\nexport default function ButtonOrder() {\n  const listData = useSelector(state => state.list);\n  const history = useHistory();\n  const [load, setLoad] = useState(false);\n\n  const orderNow = () => {\n    setLoad(true);\n    setTimeout(() => {\n      dispatch(orderSuccess());\n      setLoad(false);\n      message.success(\"ORDER SUCCESSFULLY!\");\n      setIsButton(false);\n    }, 1000);\n  };\n\n  const [isButton, setIsButton] = useState(true);\n\n  const buttonOrderNow = () => /*#__PURE__*/React.createElement(Button, {\n    onClick: () => orderNow(),\n    loading: load,\n    type: \"primary\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"ORDER NOW!\");\n\n  const buttonContinueShopping = () => /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push(\"/\"),\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"Continue Shopping!\");\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listData.length === 0 ? buttonContinueShopping() : isButton ? buttonOrderNow() : buttonContinueShopping());\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/shop/src/components/cart/ButtonOrder.jsx"],"names":["React","useState","useDispatch","useSelector","message","Button","orderSuccess","useHistory","ButtonOrder","listData","state","list","history","load","setLoad","orderNow","setTimeout","dispatch","success","setIsButton","isButton","buttonOrderNow","buttonContinueShopping","push","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACA,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMc,QAAQ,GAAG,MAAM;AACrBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,QAAQ,CAACX,YAAY,EAAb,CAAR;AACAQ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAV,MAAAA,OAAO,CAACc,OAAR,CAAgB,qBAAhB;AACAC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KALS,EAKP,IALO,CAAV;AAMD,GARD;;AASA,QAAM,CAACC,QAAD,EAAWD,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAMoB,cAAc,GAAG,mBACrB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMN,QAAQ,EAA/B;AAAmC,IAAA,OAAO,EAAEF,IAA5C;AAAkD,IAAA,IAAI,EAAC,SAAvD;AAAiE,IAAA,MAAM,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;;AAKA,QAAMS,sBAAsB,GAAG,mBAC7B,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMV,OAAO,CAACW,IAAR,CAAa,GAAb,CAAvB;AAA0C,IAAA,IAAI,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF;;AAKA,sBACE,0CACId,QAAQ,CAACe,MAAT,KAAoB,CAApB,GACMF,sBAAsB,EAD5B,GAEMF,QAAQ,GACRC,cAAc,EADN,GAERC,sBAAsB,EALhC,CADF;AAWD","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { message, Button } from 'antd';\nimport { orderSuccess } from '../../action/List';\nimport { useHistory } from 'react-router-dom';\n\nexport default function ButtonOrder() {\n  const listData = useSelector((state) => state.list);\n  const history = useHistory();\n\n  const [load, setLoad] = useState(false);\n  const orderNow = () => {\n    setLoad(true);\n    setTimeout(() => {\n      dispatch(orderSuccess());\n      setLoad(false);\n      message.success(\"ORDER SUCCESSFULLY!\");\n      setIsButton(false);\n    }, 1000);\n  };\n  const [isButton, setIsButton] = useState(true);\n  const buttonOrderNow = () => (\n    <Button onClick={() => orderNow()} loading={load} type=\"primary\" danger>\n      ORDER NOW!\n    </Button>\n  );\n  const buttonContinueShopping = () => (\n    <Button onClick={() => history.push(\"/\")} type=\"primary\">\n      Continue Shopping!\n    </Button>\n  );\n  return (\n    <>\n       {listData.length === 0\n            ? buttonContinueShopping()\n            : isButton\n            ? buttonOrderNow()\n            : buttonContinueShopping()}\n    </>\n     \n  \n  )\n}\n"]},"metadata":{},"sourceType":"module"}