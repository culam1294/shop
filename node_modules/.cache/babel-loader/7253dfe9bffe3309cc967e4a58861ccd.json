{"ast":null,"code":"import callApi from \"../api/ApiCaller\";\nconst initialState = {\n  loading: false,\n  error: null,\n  user: null\n};\n\nasync function fetchData() {\n  const api = await callApi(\"get\", \"products\", null);\n}\n\nsetI;\n\nconst dataProducts = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return {\n        loading: true,\n        user: null,\n        error: null\n      };\n\n    case \"FETCH_USER_SUCCESS\":\n      {\n        return {\n          loading: false,\n          user: action.payload.user,\n          error: null\n        };\n      }\n\n    case \"FETCH_USER_FAILED\":\n      {\n        return {\n          loading: false,\n          user: null,\n          error: action.payload.error\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default dataProducts;","map":{"version":3,"sources":["/Users/lamn/Downloads/github/mycv/src/reducers/DataProducts.js"],"names":["callApi","initialState","loading","error","user","fetchData","api","setI","dataProducts","state","action","type","payload"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,eAAeC,SAAf,GAA2B;AACzB,QAAMC,GAAG,GAAG,MAAMN,OAAO,CAAC,KAAD,EAAQ,UAAR,EAAoB,IAApB,CAAzB;AACD;;AACDO,IAAI;;AACJ,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO;AACLT,QAAAA,OAAO,EAAE,IADJ;AAELE,QAAAA,IAAI,EAAE,IAFD;AAGLD,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,oBAAL;AAA2B;AACzB,eAAO;AACLD,UAAAA,OAAO,EAAE,KADJ;AAELE,UAAAA,IAAI,EAAEM,MAAM,CAACE,OAAP,CAAeR,IAFhB;AAGLD,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,SAAK,mBAAL;AAA0B;AACxB,eAAO;AACLD,UAAAA,OAAO,EAAE,KADJ;AAELE,UAAAA,IAAI,EAAE,IAFD;AAGLD,UAAAA,KAAK,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAHjB,SAAP;AAKD;;AACD;AACE,aAAOM,KAAP;AAtBJ;AAwBD,CAzBD;;AA0BA,eAAeD,YAAf","sourcesContent":["import callApi from \"../api/ApiCaller\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  user: null,\n};\n\nasync function fetchData() {\n  const api = await callApi(\"get\", \"products\", null);\n}\nsetI\nconst dataProducts = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_USER\":\n      return {\n        loading: true,\n        user: null,\n        error: null,\n      };\n    case \"FETCH_USER_SUCCESS\": {\n      return {\n        loading: false,\n        user: action.payload.user,\n        error: null,\n      };\n    }\n    case \"FETCH_USER_FAILED\": {\n      return {\n        loading: false,\n        user: null,\n        error: action.payload.error,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default dataProducts;\n"]},"metadata":{},"sourceType":"module"}