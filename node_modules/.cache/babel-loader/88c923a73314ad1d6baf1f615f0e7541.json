{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/container/home/Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addList } from \"../../action/List\";\nimport \"antd/dist/antd.css\";\nimport { List, Card, message, Button } from \"antd\";\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\nimport CarouselHome from \"../../components/carousel/Carousel\";\nimport callApi from \"../../api/ApiCaller\";\nexport default function Home() {\n  const [data, setData] = useState();\n  const dispatch = useDispatch();\n  const listCart = useSelector(state => state.list);\n  useEffect(() => {\n    async function fetchData() {\n      await callApi(\"get\", \"products\", null).then(res => {\n        setData(res.data);\n      }).catch(err => console.log(err));\n    }\n\n    fetchData();\n  }, []);\n  const {\n    Meta\n  } = Card; //Send a product to CART\n\n  const sendProduct = id => {\n    listCart.forEach(e => {\n      if (e.id === id) {\n        id = null;\n        message.info(`${e.name} is already in cart`);\n      }\n    });\n    data.forEach(item => {\n      if (item.id === id) {\n        dispatch(addList(item));\n        message.success(`${item.name} add to Cart successfully!`);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CarouselHome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 16,\n      xs: 1,\n      sm: 2,\n      md: 3,\n      lg: 4,\n      xl: 5,\n      xxl: 6\n    },\n    pagination: \"true\",\n    dataSource: data,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        textAlign: \"center\"\n      },\n      hoverable: true,\n      title: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"cover=\", /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Products list\",\n      src: item.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 22\n      }\n    }), item.description, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      onClick: () => sendProduct(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Cart \", /*#__PURE__*/React.createElement(ShoppingCartOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 24\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/container/home/Home.js"],"names":["React","useEffect","useState","useDispatch","useSelector","addList","List","Card","message","Button","ShoppingCartOutlined","CarouselHome","callApi","Home","data","setData","dispatch","listCart","state","list","fetchData","then","res","catch","err","console","log","Meta","sendProduct","id","forEach","e","info","name","item","success","gutter","xs","sm","md","lg","xl","xxl","textAlign","image","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addList } from \"../../action/List\";\nimport \"antd/dist/antd.css\";\nimport { List, Card, message, Button } from \"antd\";\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\nimport CarouselHome from \"../../components/carousel/Carousel\";\nimport callApi from \"../../api/ApiCaller\";\n\nexport default function Home() {\n  const [data, setData] = useState();\n\n  const dispatch = useDispatch();\n  const listCart = useSelector((state) => state.list);\n\n  useEffect(() => {\n    async function fetchData() {\n      await callApi(\"get\", \"products\", null)\n        .then((res) => {\n          setData(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n    fetchData();\n  }, []);\n\n  const { Meta } = Card;\n\n  //Send a product to CART\n  const sendProduct = (id) => {\n    listCart.forEach((e) => {\n      if (e.id === id) {\n        id = null;\n        message.info(`${e.name} is already in cart`);\n      }\n    });\n    data.forEach((item) => {\n      if (item.id === id) {\n        dispatch(addList(item));\n        message.success(`${item.name} add to Cart successfully!`);\n      }\n    });\n  };\n\n  return (\n    <>\n      <CarouselHome />\n      <List\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 5,\n          xxl: 6,\n        }}\n        pagination=\"true\"\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item>\n            <Card style={{ textAlign: \"center\" }} hoverable title={item.name}>\n              {/* <div style={{ height: 100, width: 100 }}>\n                <img\n                  style={{ height: 100, width: 100 }}\n                  alt=\"Products list\"\n                  src={item.image}\n                />\n              </div> */}\n              cover={<img alt=\"Products list\" src={item.image} />}\n              {item.description}\n              <br />\n              <Button type=\"link\" onClick={() => sendProduct(item.id)}>\n                  Cart <ShoppingCartOutlined />\n                </Button>\n            </Card>\n            {/* <Card\n              title={item.name}\n              hoverable=\"true\"\n              style={{ width: 190 }}\n              cover={<img alt=\"Products list\" src={item.image} />}\n              actions={[\n                <Button type=\"link\" onClick={() => sendProduct(item.id)}>\n                  Cart <ShoppingCartOutlined />\n                </Button>,\n              ]}\n            >\n              <Meta description={item.description + \" \" + item.price + \" $\"} />\n            </Card> */}\n          </List.Item>\n        )}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}