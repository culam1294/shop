{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/container/ManagerProducts/ModalForm.jsx\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport FormProducts from \"./FormProducts\";\nimport callApi from \"../../api/ApiCaller\";\nexport default function ModalForm() {\n  const [Visible, setVisible] = useState(false);\n  const [ConfirmLoading, setConfirmLoading] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    callApi(\"products\", \"post\", null).then(res);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    type: \"primary\",\n    onClick: () => showModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Add User\"), /*#__PURE__*/React.createElement(Modal, {\n    okText: \"Add\",\n    title: \"Add a product into the table\",\n    visible: Visible,\n    onOk: () => handleOk(),\n    confirmLoading: ConfirmLoading,\n    onCancel: () => handleCancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormProducts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/container/ManagerProducts/ModalForm.jsx"],"names":["React","useState","Modal","Button","FormProducts","callApi","ModalForm","Visible","setVisible","ConfirmLoading","setConfirmLoading","showModal","handleOk","then","res","setTimeout","handleCancel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMU,SAAS,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAG,MAAM;AACrBF,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAL,IAAAA,OAAO,CAAC,UAAD,EAAa,MAAb,EAAqB,IAArB,CAAP,CAAkCQ,IAAlC,CAAwCC,GAAxC;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAPD;;AASA,QAAMM,YAAY,GAAG,MAAM;AACzBR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,OAAO,EAAE,MAAMG,SAAS,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAC,KADT;AAEE,IAAA,KAAK,EAAC,8BAFR;AAGE,IAAA,OAAO,EAAEJ,OAHX;AAIE,IAAA,IAAI,EAAE,MAAMK,QAAQ,EAJtB;AAKE,IAAA,cAAc,EAAEH,cALlB;AAME,IAAA,QAAQ,EAAE,MAAMO,YAAY,EAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,CADF;AAiBD","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport FormProducts from \"./FormProducts\";\nimport callApi from \"../../api/ApiCaller\";\n\nexport default function ModalForm() {\n  const [Visible, setVisible] = useState(false);\n  const [ConfirmLoading, setConfirmLoading] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    callApi(\"products\", \"post\", null).then((res))\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Button block type=\"primary\" onClick={() => showModal()}>\n        Add User\n      </Button>\n      <Modal\n        okText=\"Add\"\n        title=\"Add a product into the table\"\n        visible={Visible}\n        onOk={() => handleOk()}\n        confirmLoading={ConfirmLoading}\n        onCancel={() => handleCancel()}\n      >\n        <FormProducts />\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}