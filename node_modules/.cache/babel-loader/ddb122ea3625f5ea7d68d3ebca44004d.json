{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/container/home/Home.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addList } from '../../action';\nimport \"antd/dist/antd.css\";\nimport { List, Card } from \"antd\";\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport CarouselHome from \"../../components/carousel/Carousel\";\nimport callApi from \"../../api/ApiCaller\";\nexport default function Home() {\n  const [data, setData] = useState();\n  const counter = useSelector(state => state.count);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function fetchData() {\n      await callApi(\"get\", \"products\", null).then(res => setData(res.data)).catch(err => console.log(err));\n    }\n\n    fetchData();\n  }, []);\n  const {\n    Meta\n  } = Card;\n  console.log(data);\n\n  const sendProduct = id => {\n    data.forEach(element => {\n      if (element.id === id) {\n        console.log(element);\n        dispatch();\n      }\n    });\n    console.log(id);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CarouselHome, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 16,\n      xs: 1,\n      sm: 2,\n      md: 3,\n      lg: 4,\n      xl: 5,\n      xxl: 6\n    },\n    pagination: \"true\",\n    dataSource: data,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      hoverable: \"true\",\n      style: {\n        width: 300\n      },\n      cover: /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Products list\",\n        src: item.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }\n      }),\n      actions: [/*#__PURE__*/React.createElement(SettingOutlined, {\n        onClick: () => sendProduct(item.id),\n        key: \"setting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(EditOutlined, {\n        key: \"edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(EllipsisOutlined, {\n        key: \"ellipsis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Meta, {\n      title: item.name,\n      description: item.price + \"$\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/container/home/Home.js"],"names":["React","useEffect","useState","useSelector","useDispatch","addList","List","Card","EditOutlined","EllipsisOutlined","SettingOutlined","CarouselHome","callApi","Home","data","setData","counter","state","count","dispatch","fetchData","then","res","catch","err","console","log","Meta","sendProduct","id","forEach","element","gutter","xs","sm","md","lg","xl","xxl","item","width","image","name","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {addList } from '../../action'\n\nimport \"antd/dist/antd.css\";\nimport { List, Card } from \"antd\";\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CarouselHome from \"../../components/carousel/Carousel\";\nimport callApi from \"../../api/ApiCaller\";\n\nexport default function Home() {\n  const [data, setData] = useState();\n\n  const counter = useSelector((state) => state.count);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function fetchData() {\n      await callApi(\"get\", \"products\", null)\n        .then((res) => setData(res.data))\n        .catch((err) => console.log(err));\n    }\n    fetchData();\n  }, []);\n\n  const { Meta } = Card;\n \n  console.log(data);\n\n  \n\n  const sendProduct = (id)=>{\n    data.forEach(element => {\n      if (element.id === id) {\n        console.log(element)\n        dispatch()\n      }\n    });\n    console.log(id)\n  }\n \n  return (\n    <>\n      <CarouselHome />\n      <List\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 3,\n          lg: 4,\n          xl: 5,\n          xxl: 6,\n        }}\n        pagination=\"true\"\n        dataSource={data}\n        renderItem={(item) => (\n          <List.Item>\n            <Card\n              hoverable=\"true\"\n              style={{ width: 300 }}\n              cover={<img alt=\"Products list\" src={item.image} />}\n              actions={[\n                <SettingOutlined onClick={()=> sendProduct(item.id)} key=\"setting\" />,\n                <EditOutlined key=\"edit\" />,\n                <EllipsisOutlined key=\"ellipsis\" />,\n              ]}\n            >\n              <Meta title={item.name} description={item.price + \"$\"} />\n            </Card>\n          </List.Item>\n        )}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}