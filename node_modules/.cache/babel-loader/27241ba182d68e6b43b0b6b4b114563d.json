{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/components/ModalFormLogout.jsx\";\nimport React, { useState } from \"react\";\nimport { Modal, Button, Form, Input, Select, InputNumber, message } from \"antd\";\nexport default function ModalForm() {\n  const [visible, setVisible] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n\n  const onFinish = async value => {\n    setVisible(false);\n    setIsLoad(false);\n    message.success(\"Add new product success!\");\n  };\n\n  const onFinishFailed = err => {\n    console.log(\"Failed:\", err);\n    setIsLoad(!isLoad);\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n    setIsLoad(false);\n  };\n\n  const [form] = Form.useForm();\n\n  const onReset = () => {\n    form.resetFields();\n    setIsLoad(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    type: \"link\",\n    onClick: () => setVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(Modal, {\n    closable: false,\n    title: \"Add a product into the table\",\n    visible: visible,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    wrapperCol: {\n      span: 20\n    },\n    layout: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true\n    }],\n    name: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true\n    }],\n    name: \"cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    min: 0,\n    placeholder: \"Cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true\n    }],\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    rules: [{\n      required: true\n    }],\n    name: \"stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"In Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"In Stock\"), /*#__PURE__*/React.createElement(Select.Option, {\n    value: \"Out Stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Out Stock\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setIsLoad(!isLoad),\n    loading: isLoad,\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 5\n    },\n    onClick: () => onReset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => onCancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/components/ModalFormLogout.jsx"],"names":["React","useState","Modal","Button","Form","Input","Select","InputNumber","message","ModalForm","visible","setVisible","isLoad","setIsLoad","onFinish","value","success","onFinishFailed","err","console","log","onCancel","form","useForm","onReset","resetFields","span","required","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, Form, Input, Select, InputNumber, message } from \"antd\";\n\nexport default function ModalForm() {\n\n  const [visible, setVisible] = useState(false);\n  const [isLoad, setIsLoad] = useState(false);\n\n  const onFinish = async (value) => {\n    setVisible(false);\n    setIsLoad(false);\n    message.success(\"Add new product success!\");\n  };\n  const onFinishFailed = (err) => {\n    console.log(\"Failed:\", err);\n    setIsLoad(!isLoad);\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n    setIsLoad(false);\n  };\n  const [form] = Form.useForm();\n  const onReset = () => {\n    form.resetFields();\n    setIsLoad(false);\n  };\n\n  return (\n    <>\n      \n      <Button block type=\"link\" onClick={() => setVisible(true)}>\n        Logout\n      </Button>\n      <Modal\n        closable={false}\n        title=\"Add a product into the table\"\n        visible={visible}\n        footer={null}\n      >\n        <Form\n          form={form}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          wrapperCol={{ span: 20 }}\n          layout=\"horizontal\"\n        >\n          <Form.Item rules={[{ required: true }]} name=\"product\">\n            <Input placeholder=\"Product\" />\n          </Form.Item>\n          <Form.Item rules={[{ required: true }]} name=\"cost\">\n            <InputNumber min={0} placeholder=\"Cost\" />\n          </Form.Item>\n          <Form.Item rules={[{ required: true }]} name=\"description\">\n            <Input placeholder=\"Description\" />\n          </Form.Item>\n          <Form.Item rules={[{ required: true }]} name=\"stock\">\n            <Select placeholder=\"Stock\">\n              <Select.Option value=\"In Stock\">In Stock</Select.Option>\n              <Select.Option value=\"Out Stock\">Out Stock</Select.Option>\n            </Select>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              onClick={() => setIsLoad(!isLoad)}\n              loading={isLoad}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              Add\n            </Button>\n            <Button style={{ margin: 5 }} onClick={() => onReset()}>\n              Reset\n            </Button>\n            <Button onClick={() => onCancel()}>Cancel</Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}