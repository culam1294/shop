{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/container/ManagerProducts/ModalForm.jsx\";\nimport React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport FormProducts from \"./FormProducts\";\nexport default function ModalForm() {\n  const [ModalText, setModalText] = useState(\"content of modal\");\n  const [Visible, setVisible] = useState(false);\n  const [ConfirmLoading, setConfirmLoading] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    type: \"primary\",\n    onClick: () => showModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Add User\"), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Title\",\n    visible: Visible,\n    onOk: () => handleOk(),\n    confirmLoading: ConfirmLoading,\n    onCancel: () => handleCancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, ModalText), /*#__PURE__*/React.createElement(FormProducts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/container/ManagerProducts/ModalForm.jsx"],"names":["React","useState","Modal","Button","FormProducts","ModalForm","ModalText","setModalText","Visible","setVisible","ConfirmLoading","setConfirmLoading","showModal","handleOk","setTimeout","handleCancel","console","log","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,kBAAD,CAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMW,SAAS,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAG,MAAM;AACrBN,IAAAA,YAAY,CAAC,4CAAD,CAAZ;AACAI,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAG,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAPD;;AASA,QAAMI,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACS,MAAAA,SAAS,EAAC;AAAX,KAAf;AAAmC,IAAA,IAAI,EAAC,SAAxC;AAAkD,IAAA,OAAO,EAAE,MAAIN,SAAS,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,OAAO,EAAEJ,OAFX;AAGE,IAAA,IAAI,EAAE,MAAIK,QAAQ,EAHpB;AAIE,IAAA,cAAc,EAAEH,cAJlB;AAKE,IAAA,QAAQ,EAAE,MAAIK,YAAY,EAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,SAAJ,CAPF,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,CADF;AAiBD","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport FormProducts from \"./FormProducts\";\n\nexport default function ModalForm() {\n  const [ModalText, setModalText] = useState(\"content of modal\");\n  const [Visible, setVisible] = useState(false);\n  const [ConfirmLoading, setConfirmLoading] = useState(false);\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setModalText(\"The modal will be closed after two seconds\");\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <Button style={{marginTop:'10px'}} type=\"primary\" onClick={()=>showModal()}>\n        Add User\n      </Button>\n      <Modal\n        title=\"Title\"\n        visible={Visible}\n        onOk={()=>handleOk()}\n        confirmLoading={ConfirmLoading}\n        onCancel={()=>handleCancel()}\n      >\n        <p>{ModalText}</p>\n        <FormProducts />\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}