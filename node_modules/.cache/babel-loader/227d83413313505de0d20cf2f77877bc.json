{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/components/menuHeader/MenuHeader.jsx\";\nimport React, { useState } from \"react\";\nimport routes from \"../../\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport { Menu, Button, Avatar, Popconfirm, Badge } from \"antd\";\nimport ModalFormLogin from \"../ModalFormLogin\";\nimport ModalFormSignin from \"../ModalFormSignin\";\nimport { QuestionCircleOutlined, UserOutlined } from \"@ant-design/icons\";\nexport default function MenuHeader() {\n  const [isLogin, setIsLogin] = useState(true);\n\n  const login = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalFormLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalFormSignin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n\n  const logout = () => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    count: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    style: {\n      backgroundColor: \"#87d068\"\n    },\n    icon: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Popconfirm, {\n    placement: \"bottomRight\",\n    onConfirm: () => setIsLogin(false),\n    title: \"Are you sure\\uFF1F\",\n    icon: /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Logout\")));\n\n  const menuHeader = routes.map((route, index) => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: route.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, route.title)));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Menu, {\n    theme: \"light\",\n    mode: \"horizontal\",\n    defaultSelectedKeys: [\"0\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, menuHeader, isLogin ? logout() : login()));\n}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/components/menuHeader/MenuHeader.jsx"],"names":["React","useState","routes","BrowserRouter","Link","Menu","Button","Avatar","Popconfirm","Badge","ModalFormLogin","ModalFormSignin","QuestionCircleOutlined","UserOutlined","MenuHeader","isLogin","setIsLogin","login","logout","float","backgroundColor","color","menuHeader","map","route","index","path","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAa,IAAIC,IAA1B,QAAsC,kBAAtC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,UAA/B,EAA2CC,KAA3C,QAAwD,MAAxD;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,sBAAT,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMgB,KAAK,GAAG,mBACZ,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;;AAMA,QAAMC,MAAM,GAAG,mBACb;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KADT;AAEE,IAAA,IAAI,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,SAAS,EAAE,MAAMJ,UAAU,CAAC,KAAD,CAF7B;AAGE,IAAA,KAAK,EAAC,oBAHR;AAIE,IAAA,IAAI,eAAE,oBAAC,sBAAD;AAAwB,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CAPF,CADF;;AAkBA,QAAMC,UAAU,GAAGpB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAC5B,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,KAAK,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,KAAK,CAACG,KAA7B,CADF,CADiB,CAAnB;AAKA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,YAAzB;AAAsC,IAAA,mBAAmB,EAAE,CAAC,GAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,UADH,EAEGP,OAAO,GAAGG,MAAM,EAAT,GAAcD,KAAK,EAF7B,CADF,CADF;AAQD","sourcesContent":["import React, { useState } from \"react\";\nimport routes from \"../../\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport { Menu, Button, Avatar, Popconfirm, Badge } from \"antd\";\nimport ModalFormLogin from \"../ModalFormLogin\";\nimport ModalFormSignin from \"../ModalFormSignin\";\nimport { QuestionCircleOutlined, UserOutlined } from \"@ant-design/icons\";\n\nexport default function MenuHeader() {\n  const [isLogin, setIsLogin] = useState(true);\n\n  const login = () => (\n    <>\n      <ModalFormLogin />\n      <ModalFormSignin />\n    </>\n  );\n  const logout = () => (\n    <div style={{ float: \"right\" }}>\n      <Badge count={1}>\n        <Avatar\n          style={{ backgroundColor: \"#87d068\" }}\n          icon={<UserOutlined />}\n        />\n      </Badge>\n      <Popconfirm\n        placement=\"bottomRight\"\n        onConfirm={() => setIsLogin(false)}\n        title=\"Are you sureï¼Ÿ\"\n        icon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n      >\n        <Button type=\"link\">Logout</Button>\n      </Popconfirm>\n    </div>\n  );\n  const menuHeader = routes.map((route, index) => (\n    <Menu.Item key={index}>\n      <Link to={route.path}>{route.title}</Link>\n    </Menu.Item>\n  ));\n  return (\n    <>\n      <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"0\"]}>\n        {menuHeader}\n        {isLogin ? logout() : login()}\n      </Menu>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}