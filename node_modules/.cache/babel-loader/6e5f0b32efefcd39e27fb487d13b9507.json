{"ast":null,"code":"export default function cart(state = [], action) {\n  switch (action.type) {\n    case \"ADD_LIST\":\n      {\n        return [...state, action.payload];\n      }\n\n    case \"INCREMENT_AMOUNT\":\n      {\n        const changed = state.fo(e => {\n          if (e.id === action.payload) {\n            e.amount++;\n          }\n\n          return e.amount;\n        });\n        return changed;\n      }\n\n    case \"DECREMENT_AMOUNT\":\n      {\n        return [...state, action.payload];\n      }\n\n    default:\n      return state;\n  }\n} // return state.map((item, index) => {\n//   if(index !== action.index) {\n//       return item;\n//   }\n//   return [\n//       ...state,\n//       ...action.payload\n//   ]\n// });\n// }","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/reducers/List.js"],"names":["cart","state","action","type","payload","changed","fo","e","id","amount"],"mappings":"AAAA,eAAe,SAASA,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,eAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AACD;;AACD,SAAK,kBAAL;AAAyB;AACvB,cAAMC,OAAO,GAAGJ,KAAK,CAACK,EAAN,CAAUC,CAAD,IAAO;AAC9B,cAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACE,OAApB,EAA6B;AACzBG,YAAAA,CAAC,CAACE,MAAF;AACH;;AACD,iBAAOF,CAAC,CAACE,MAAT;AACH,SALiB,CAAhB;AAMA,eAAOJ,OAAP;AACD;;AACD,SAAK,kBAAL;AAAyB;AACvB,eAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AACD;;AACD;AACE,aAAOH,KAAP;AAjBJ;AAmBD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export default function cart(state = [], action) {\n  switch (action.type) {\n    case \"ADD_LIST\": {\n      return [...state, action.payload];\n    }\n    case \"INCREMENT_AMOUNT\": {\n      const changed = state.fo((e) => {\n        if (e.id === action.payload) {\n            e.amount++;\n        }\n        return e.amount;\n    });\n      return changed;\n    }\n    case \"DECREMENT_AMOUNT\": {\n      return [...state, action.payload];\n    }\n    default:\n      return state;\n  }\n}\n\n// return state.map((item, index) => {\n//   if(index !== action.index) {\n//       return item;\n//   }\n\n//   return [\n//       ...state,\n//       ...action.payload\n//   ]\n// });\n// }\n"]},"metadata":{},"sourceType":"module"}