{"ast":null,"code":"const initialState = {\n  list: [],\n  amount: 1\n};\n\nconst List = (state = initialState.list, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\":\n      {\n        return [...state, action.payload];\n      }\n\n    case \"INCREMENT_AMOUNT\":\n      {\n        const id = action.payload;\n        state.forEach(e => {\n          if (e.id === id) {\n            var a = e.amount + 1;\n          }\n        });\n        return [...state];\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default List; // return state.map((item, index) => {\n//   if(index !== action.index) {\n//       return item;\n//   }\n//   return [\n//       ...state,\n//       ...action.payload\n//   ]\n// });\n// }","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/reducers/List.js"],"names":["initialState","list","amount","List","state","action","type","payload","id","forEach","e","a"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGJ,YAAY,CAACC,IAAtB,EAA4BI,MAA5B,KAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACf,eAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AACD;;AACD,SAAK,kBAAL;AAAyB;AACvB,cAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB;AACAH,QAAAA,KAAK,CAACK,OAAN,CAAcC,CAAC,IAAI;AACjB,cAAIA,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACf,gBAAIG,CAAC,GAAGD,CAAC,CAACR,MAAF,GAAS,CAAjB;AACD;AACF,SAJD;AAKA,eAAO,CAAC,GAAGE,KAAJ,CAAP;AACD;;AACD;AACE,aAAOA,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,IAAf,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const initialState = {\n  list: [],\n  amount: 1\n}\nconst List = (state = initialState.list, action) => {\n  switch (action.type) {\n    case \"ADD_LIST\": {\n      return [...state, action.payload];\n    }\n    case \"INCREMENT_AMOUNT\": {\n      const id = action.payload;\n      state.forEach(e => {\n        if (e.id === id) {\n          var a = e.amount+1\n        }\n      });\n      return [...state];\n    }\n    default:\n      return state;\n  }\n}\n\nexport default List;\n\n// return state.map((item, index) => {\n//   if(index !== action.index) {\n//       return item;\n//   }\n\n//   return [\n//       ...state,\n//       ...action.payload\n//   ]\n// });\n// }\n"]},"metadata":{},"sourceType":"module"}