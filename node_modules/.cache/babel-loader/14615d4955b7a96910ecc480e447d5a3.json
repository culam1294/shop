{"ast":null,"code":"var _jsxFileName = \"/Users/lamn/Downloads/github/redux-start/src/container/ManagerProducts/FormAdd.jsx\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Table, Tag, Button, Form, Input, Select, DatePicker, InputNumber } from \"antd\";\nexport default function FormAdd() {\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = values => {\n    console.log(values);\n  };\n\n  const a = 1;\n  const b = 0;\n  const c = [];\n  const d = '';\n  const e = {};\n  con;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    ref: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), errors.email && errors.email.message, /*#__PURE__*/React.createElement(Input, {\n    name: \"username\",\n    ref: register({\n      validate: value => value !== \"admin\" || \"Nice try!\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), errors.username && errors.username.message, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n}\n;","map":{"version":3,"sources":["/Users/lamn/Downloads/github/redux-start/src/container/ManagerProducts/FormAdd.jsx"],"names":["React","useForm","Table","Tag","Button","Form","Input","Select","DatePicker","InputNumber","FormAdd","handleSubmit","register","errors","onSubmit","values","console","log","a","b","c","d","e","con","required","pattern","value","message","email","validate","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,oBAAP;AACA,SACEC,KADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,UAPF,EAQEC,WARF,QASO,MATP;AAWA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCZ,OAAO,EAAlD;;AACA,QAAMa,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAFD;;AAGF,QAAMG,CAAC,GAAE,CAAT;AACA,QAAMC,CAAC,GAAG,CAAV;AACA,QAAMC,CAAC,GAAG,EAAV;AACA,QAAMC,CAAC,GAAG,EAAV;AACA,QAAMC,CAAC,GAAG,EAAV;AAEEC,EAAAA,GAAG;AAEH,sBACE;AAAM,IAAA,QAAQ,EAAEZ,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEF,QAAQ,CAAC;AACZY,MAAAA,QAAQ,EAAE,UADE;AAEZC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,2CADA;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFG,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGd,MAAM,CAACe,KAAP,IAAgBf,MAAM,CAACe,KAAP,CAAaD,OAXhC,eAaE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEf,QAAQ,CAAC;AACZiB,MAAAA,QAAQ,EAAEH,KAAK,IAAIA,KAAK,KAAK,OAAV,IAAqB;AAD5B,KAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBGb,MAAM,CAACiB,QAAP,IAAmBjB,MAAM,CAACiB,QAAP,CAAgBH,OAnBtC,eAqBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,CADF;AAyBD;AAAA","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport {\n  Table,\n  Tag,\n  Button,\n  Form,\n  Input,\n  Select,\n  DatePicker,\n  InputNumber,\n} from \"antd\";\n\nexport default function FormAdd() {\n  const { handleSubmit, register, errors } = useForm();\n  const onSubmit = values => {\n    console.log(values);\n  };\nconst a =1\nconst b = 0\nconst c = []\nconst d = ''\nconst e = {}\n\n  con\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        name=\"email\"\n        ref={register({\n          required: 'Required',\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n            message: \"invalid email address\"\n          }\n        })}\n      />\n      {errors.email && errors.email.message}\n\n      <Input\n        name=\"username\"\n        ref={register({\n          validate: value => value !== \"admin\" || \"Nice try!\"\n        })}\n      />\n      {errors.username && errors.username.message}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}