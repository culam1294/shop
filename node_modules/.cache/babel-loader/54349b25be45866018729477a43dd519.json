{"ast":null,"code":"const initialState = {\n  loading: false,\n  error: null,\n  user: null\n};\n\nasync function fetchData() {\n  const api = await callApi(\"get\", \"products\", null);\n  setData(api.data);\n  setDataSearch(api.data);\n  setLoad(false);\n}\n\nfetchData();\n\nconst dataProducts = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_USER:\n      return {\n        loading: true,\n        user: null,\n        error: null\n      };\n\n    case FETCH_USER_SUCCESS:\n      {\n        return {\n          loading: false,\n          user: action.payload.user,\n          error: null\n        };\n      }\n\n    case FETCH_USER_FAILED:\n      {\n        return {\n          loading: false,\n          user: null,\n          error: action.payload.error\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default dataProducts;","map":{"version":3,"sources":["/Users/lamn/Downloads/github/mycv/src/reducers/DataProducts.js"],"names":["initialState","loading","error","user","fetchData","api","callApi","setData","data","setDataSearch","setLoad","dataProducts","state","action","type","FETCH_USER","FETCH_USER_SUCCESS","payload","FETCH_USER_FAILED"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,eAAeC,SAAf,GAA2B;AACzB,QAAMC,GAAG,GAAG,MAAMC,OAAO,CAAC,KAAD,EAAQ,UAAR,EAAoB,IAApB,CAAzB;AACEC,EAAAA,OAAO,CAACF,GAAG,CAACG,IAAL,CAAP;AACAC,EAAAA,aAAa,CAACJ,GAAG,CAACG,IAAL,CAAb;AACAE,EAAAA,OAAO,CAAC,KAAD,CAAP;AAEH;;AACDN,SAAS;;AAET,MAAMO,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,UAAL;AACE,aAAO;AACLd,QAAAA,OAAO,EAAE,IADJ;AAELE,QAAAA,IAAI,EAAE,IAFD;AAGLD,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKc,kBAAL;AAAyB;AACvB,eAAO;AACLf,UAAAA,OAAO,EAAE,KADJ;AAELE,UAAAA,IAAI,EAAEU,MAAM,CAACI,OAAP,CAAed,IAFhB;AAGLD,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,SAAKgB,iBAAL;AAAwB;AACtB,eAAO;AACLjB,UAAAA,OAAO,EAAE,KADJ;AAELE,UAAAA,IAAI,EAAE,IAFD;AAGLD,UAAAA,KAAK,EAAEW,MAAM,CAACI,OAAP,CAAef;AAHjB,SAAP;AAKD;;AACD;AACE,aAAOU,KAAP;AAtBJ;AAwBD,CAzBD;;AA0BA,eAAeD,YAAf","sourcesContent":["const initialState = {\n  loading: false,\n  error: null,\n  user: null\n}\n\nasync function fetchData() {\n  const api = await callApi(\"get\", \"products\", null)\n    setData(api.data);\n    setDataSearch(api.data);\n    setLoad(false);\n  \n}\nfetchData();\n\nconst dataProducts = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_USER:\n      return {\n        loading: true,\n        user: null,\n        error: null,\n      };\n    case FETCH_USER_SUCCESS: {\n      return {\n        loading: false,\n        user: action.payload.user,\n        error: null,\n      };\n    }\n    case FETCH_USER_FAILED: {\n      return {\n        loading: false,\n        user: null,\n        error: action.payload.error\n      }\n    }\n    default:\n      return state;\n  }\n};\nexport default dataProducts;"]},"metadata":{},"sourceType":"module"}