{"ast":null,"code":"import React from\"react\";import{Button,Avatar,Popconfirm,Badge,Space}from\"antd\";import{QuestionCircleOutlined,UserOutlined}from\"@ant-design/icons\";import ModalFormLogin from\"./ModalFormLogin\";import ModalFormSignin from\"./ModalFormSignin\";import{useSelector,useDispatch}from\"react-redux\";import{isLogin}from\"../../action/IsLogin\";import{useHistory}from\"react-router-dom\";export default function LoginNavbar(){var login=useSelector(function(state){return state.login;});var dispatch=useDispatch();var history=useHistory();var onClickAvatar=function onClickAvatar(){history.push(\"/profile/page1\");};var loginMenu=function loginMenu(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalFormLogin,null),/*#__PURE__*/React.createElement(ModalFormSignin,null));};var logoutMenu=function logoutMenu(){return/*#__PURE__*/React.createElement(Space,null,/*#__PURE__*/React.createElement(Badge,{count:1},/*#__PURE__*/React.createElement(Avatar,{onClick:function onClick(){return onClickAvatar();},style:{backgroundColor:\"#87d068\",cursor:\"pointer\"},icon:/*#__PURE__*/React.createElement(UserOutlined,null)})),/*#__PURE__*/React.createElement(Popconfirm,{placement:\"bottomRight\",onConfirm:function onConfirm(){return dispatch(isLogin());},title:\"Are you sure Logout\\uFF1F\",icon:/*#__PURE__*/React.createElement(QuestionCircleOutlined,{style:{color:\"red\"}})},/*#__PURE__*/React.createElement(Button,{type:\"link\",style:{fontSize:\"1.5em\"}},\"Logout\")));};return/*#__PURE__*/React.createElement(Space,{style:{marginBottom:3,marginLeft:30}},login?logoutMenu():loginMenu());}","map":{"version":3,"sources":["/Users/lamn/Downloads/github/mycv/src/components/home/LoginNavbar.jsx"],"names":["React","Button","Avatar","Popconfirm","Badge","Space","QuestionCircleOutlined","UserOutlined","ModalFormLogin","ModalFormSignin","useSelector","useDispatch","isLogin","useHistory","LoginNavbar","login","state","dispatch","history","onClickAvatar","push","loginMenu","logoutMenu","backgroundColor","cursor","color","fontSize","marginBottom","marginLeft"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,UAAzB,CAAqCC,KAArC,CAA4CC,KAA5C,KAAyD,MAAzD,CACA,OAASC,sBAAT,CAAiCC,YAAjC,KAAqD,mBAArD,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,OAAT,KAAwB,sBAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CACpC,GAAMC,CAAAA,KAAK,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAjB,EAAD,CAAzB,CACA,GAAME,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,GAAMO,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CAEA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BD,OAAO,CAACE,IAAR,CAAa,gBAAb,EACD,CAFD,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,sBAChB,qDACE,oBAAC,cAAD,MADF,cAEE,oBAAC,eAAD,MAFF,CADgB,EAAlB,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,sBACjB,oBAAC,KAAD,mBACE,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAd,eACE,oBAAC,MAAD,EACE,OAAO,CAAE,yBAAMH,CAAAA,aAAa,EAAnB,EADX,CAEE,KAAK,CAAE,CAAEI,eAAe,CAAE,SAAnB,CAA8BC,MAAM,CAAE,SAAtC,CAFT,CAGE,IAAI,cAAE,oBAAC,YAAD,MAHR,EADF,CADF,cAQE,oBAAC,UAAD,EACE,SAAS,CAAC,aADZ,CAEE,SAAS,CAAE,2BAAMP,CAAAA,QAAQ,CAACL,OAAO,EAAR,CAAd,EAFb,CAGE,KAAK,CAAC,2BAHR,CAIE,IAAI,cAAE,oBAAC,sBAAD,EAAwB,KAAK,CAAE,CAAEa,KAAK,CAAE,KAAT,CAA/B,EAJR,eAME,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAZ,CAA3B,WANF,CARF,CADiB,EAAnB,CAqBA,mBACE,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAEC,YAAY,CAAE,CAAhB,CAAmBC,UAAU,CAAE,EAA/B,CAAd,EACGb,KAAK,CAAGO,UAAU,EAAb,CAAkBD,SAAS,EADnC,CADF,CAKD","sourcesContent":["import React from \"react\";\nimport { Button, Avatar, Popconfirm, Badge, Space } from \"antd\";\nimport { QuestionCircleOutlined, UserOutlined } from \"@ant-design/icons\";\nimport ModalFormLogin from \"./ModalFormLogin\";\nimport ModalFormSignin from \"./ModalFormSignin\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isLogin } from \"../../action/IsLogin\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function LoginNavbar() {\n  const login = useSelector((state) => state.login);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onClickAvatar = () => {\n    history.push(\"/profile/page1\");\n  };\n\n  const loginMenu = () => (\n    <>\n      <ModalFormLogin />\n      <ModalFormSignin />\n    </>\n  );\n  const logoutMenu = () => (\n    <Space>\n      <Badge count={1}>\n        <Avatar\n          onClick={() => onClickAvatar()}\n          style={{ backgroundColor: \"#87d068\", cursor: \"pointer\" }}\n          icon={<UserOutlined />}\n        />\n      </Badge>\n      <Popconfirm\n        placement=\"bottomRight\"\n        onConfirm={() => dispatch(isLogin())}\n        title=\"Are you sure Logoutï¼Ÿ\"\n        icon={<QuestionCircleOutlined style={{ color: \"red\" }} />}\n      >\n        <Button type=\"link\" style={{ fontSize: \"1.5em\" }}>\n          Logout\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n  return (\n    <Space style={{ marginBottom: 3, marginLeft: 30 }}>\n      {login ? logoutMenu() : loginMenu()}\n    </Space>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}